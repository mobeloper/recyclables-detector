# Dockerfile.gpu
## FROM nvcr.io/nvidia/pytorch:24.05-py3
# Base image for GPU execution (Official PyTorch image)
FROM pytorch/pytorch:2.4.0-cuda11.8-cudnn9-runtime

WORKDIR /app

# The necessary system libraries are already included in this base image.
# We will run apt-get again to be safe.
RUN apt-get update && apt-get install -y \
    libgl1-mesa-glx \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip first
RUN python -m pip install --upgrade pip

# Check Python version
RUN python --version && python -c "import sys; print('Python path:', sys.executable)"

# Install requirements with --no-cache-dir to avoid cache issues
COPY requirements.txt .
RUN python -m pip install --no-cache-dir -r requirements.txt

# Clear Python cache, updated for Python 3.12
RUN find /usr/local/lib/python3.12 -name "*.pyc" -delete 2>/dev/null || true && \
    find /usr/local/lib/python3.12 -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true

# Debug: Check what versions were actually installed
RUN python -m pip list | grep -E "(opencv|supervision|numpy)"

# Test imports during build to catch issues early
RUN python -c "import supervision as sv; import cv2; print('OpenCV version:', cv2.__version__); print('Supervision version:', sv.__version__); print('All imports successful')"

# Copy your model file
COPY loopvision_2025Jun25.pth .

# Copy your FastAPI application code
COPY main.py .

# Test your main application imports
RUN python -c "import main; print('Main application imports successful')"

# Expose the port your FastAPI app will listen on
EXPOSE 5050

# Command to run FastAPI app with Gunicorn managing Uvicorn workers
CMD ["gunicorn", "-w", "4", "-k", "uvicorn.workers.UvicornWorker", "-b", "0.0.0.0:5050", "main:app"]